<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.elearning</groupId>
		<artifactId>e-learning-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<packaging>jar</packaging>
	<name>e-learning-hystrix</name>
	<description>Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable.</description>
	<artifactId>e-learning-hystrix</artifactId>

	<properties>
		<main.basedir>${basedir}/..</main.basedir>
	</properties>


	<dependencies>

		<!-- lib to centralize all config properties in the cloud under the project 
			e-learning-cloudconfig. I'm saving the server port number for this microservice 
			so e-learning-cloudconfig should be run first. -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-client</artifactId>
		</dependency>
		<!-- needed by cloud config in order to set the module name. bootstrap.yml -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- automatic discovery service lib. Note that eureka lib has actuator 
			lib as a dependency but we explicitly declare it because cloud-config-client 
			needs it as well (if we decide to remove eureka lib then cloud-config-client 
			will still have the lib.). -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<!-- Hystrix is a latency and fault tolerance library designed to isolate 
			points of access to remote systems, services and 3rd party libraries, stop 
			cascading failure and enable resilience in complex distributed systems where 
			failure is inevitable. -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>
		<!-- The Hystrix Dashboard enables realtime monitoring of Hystrix metrics. 
			More info at https://github.com/Netflix/Hystrix/wiki/Dashboard. http://localhost:7979/hystrix-dashboard -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
		</dependency>

	</dependencies>


</project>
